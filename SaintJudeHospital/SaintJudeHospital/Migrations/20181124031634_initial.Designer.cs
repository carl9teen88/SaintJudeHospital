// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaintJudeHospital.Data.Entity;

namespace SaintJudeHospital.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181124031634_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance");

                    b.Property<int>("BillStatusId");

                    b.Property<int>("CheckupId");

                    b.Property<decimal>("ConsultationFee");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("EarPiercingFee");

                    b.Property<decimal>("FollowUpFee");

                    b.Property<decimal>("NebulizationFee");

                    b.Property<decimal>("PPDFee");

                    b.Property<int>("PatientId");

                    b.Property<string>("PayProcess");

                    b.Property<decimal>("TotalPayment");

                    b.Property<string>("VaccineInfo");

                    b.HasKey("Id");

                    b.HasIndex("BillStatusId");

                    b.HasIndex("CheckupId");

                    b.HasIndex("PatientId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.BillStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BillStatuses");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Checkup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Assessment");

                    b.Property<string>("CivilStatus");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Diagnosis");

                    b.Property<string>("Gender");

                    b.Property<string>("HeadCircum");

                    b.Property<string>("Height");

                    b.Property<string>("Name");

                    b.Property<DateTime>("NextVisitDate");

                    b.Property<string>("Objective");

                    b.Property<string>("Prescription");

                    b.Property<string>("Subjective");

                    b.Property<string>("Temperature");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.ToTable("Checkups");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Immunize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Immunizes");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.InPatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("InPatients");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Laboratory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Laboratories");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.MedicalCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Diagnosis");

                    b.Property<string>("Operation");

                    b.Property<int>("PatientId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Requestor");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicalCertificates");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId");

                    b.Property<string>("Description");

                    b.Property<string>("GenericName");

                    b.Property<string>("Inscription");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Occupation");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("Age");

                    b.Property<string>("CivilStatus");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LastName");

                    b.Property<int?>("Parent1Id");

                    b.Property<int?>("Parent2Id");

                    b.Property<int?>("ParentId1");

                    b.Property<int?>("ParentId2");

                    b.Property<int>("PatientStatusId");

                    b.HasKey("Id");

                    b.HasIndex("Parent1Id");

                    b.HasIndex("Parent2Id");

                    b.HasIndex("PatientStatusId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.PatientStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PatientStatuses");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Role", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<string>("Name");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Symtom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Symtoms");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Booster");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Dose");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("VaccineTypeId");

                    b.HasKey("Id");

                    b.HasIndex("VaccineTypeId");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.VaccinePatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckupId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("PatientId");

                    b.Property<int>("VaccineId");

                    b.HasKey("Id");

                    b.HasIndex("CheckupId");

                    b.HasIndex("PatientId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccinePatients");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.VaccineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("VaccineTypes");
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Bill", b =>
                {
                    b.HasOne("SaintJudeHospital.Data.Entity.BillStatus", "BillStatus")
                        .WithMany()
                        .HasForeignKey("BillStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SaintJudeHospital.Data.Entity.Checkup", "Checkup")
                        .WithMany()
                        .HasForeignKey("CheckupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SaintJudeHospital.Data.Entity.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.MedicalCertificate", b =>
                {
                    b.HasOne("SaintJudeHospital.Data.Entity.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Medicine", b =>
                {
                    b.HasOne("SaintJudeHospital.Data.Entity.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Patient", b =>
                {
                    b.HasOne("SaintJudeHospital.Data.Entity.Parent", "Parent1")
                        .WithMany()
                        .HasForeignKey("Parent1Id");

                    b.HasOne("SaintJudeHospital.Data.Entity.Parent", "Parent2")
                        .WithMany()
                        .HasForeignKey("Parent2Id");

                    b.HasOne("SaintJudeHospital.Data.Entity.PatientStatus", "PatientStatus")
                        .WithMany()
                        .HasForeignKey("PatientStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.User", b =>
                {
                    b.HasOne("SaintJudeHospital.Data.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.Vaccine", b =>
                {
                    b.HasOne("SaintJudeHospital.Data.Entity.VaccineType", "VaccineType")
                        .WithMany()
                        .HasForeignKey("VaccineTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SaintJudeHospital.Data.Entity.VaccinePatient", b =>
                {
                    b.HasOne("SaintJudeHospital.Data.Entity.Checkup", "Chekup")
                        .WithMany()
                        .HasForeignKey("CheckupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SaintJudeHospital.Data.Entity.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SaintJudeHospital.Data.Entity.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
